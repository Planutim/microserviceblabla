// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"example/models"
)

// ProductsRequestReader is a Reader for the ProductsRequest structure.
type ProductsRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProductsRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewProductsRequestCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 422:
		result := NewProductsRequestUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewProductsRequestNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewProductsRequestCreated creates a ProductsRequestCreated with default headers values
func NewProductsRequestCreated() *ProductsRequestCreated {
	return &ProductsRequestCreated{}
}

/* ProductsRequestCreated describes a response with status code 201, with default header values.

No content is returned by this API endpoint
*/
type ProductsRequestCreated struct {
}

func (o *ProductsRequestCreated) Error() string {
	return fmt.Sprintf("[POST /][%d] productsRequestCreated ", 201)
}

func (o *ProductsRequestCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewProductsRequestUnprocessableEntity creates a ProductsRequestUnprocessableEntity with default headers values
func NewProductsRequestUnprocessableEntity() *ProductsRequestUnprocessableEntity {
	return &ProductsRequestUnprocessableEntity{}
}

/* ProductsRequestUnprocessableEntity describes a response with status code 422, with default header values.

Validation errors defined as an array of strings
*/
type ProductsRequestUnprocessableEntity struct {
	Payload *models.ValidationError
}

func (o *ProductsRequestUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /][%d] productsRequestUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *ProductsRequestUnprocessableEntity) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *ProductsRequestUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProductsRequestNotImplemented creates a ProductsRequestNotImplemented with default headers values
func NewProductsRequestNotImplemented() *ProductsRequestNotImplemented {
	return &ProductsRequestNotImplemented{}
}

/* ProductsRequestNotImplemented describes a response with status code 501, with default header values.

Generic error message returned as a string
*/
type ProductsRequestNotImplemented struct {
	Payload *models.GenericError
}

func (o *ProductsRequestNotImplemented) Error() string {
	return fmt.Sprintf("[POST /][%d] productsRequestNotImplemented  %+v", 501, o.Payload)
}
func (o *ProductsRequestNotImplemented) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *ProductsRequestNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
